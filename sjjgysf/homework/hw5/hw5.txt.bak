1.改进的二分法
	寻找第i个符合条件的数(如第一个或最后一个,end = mid / start = mid)
2.在旋转有序数列中查找最小值
	数组分为两段,分段有序――将mid与start比较即可
3.在旋转有序数列中查找给定值
	同上,只需多考虑tar与mid和start的关系
4.搜索插入指定元素_bisect
	在二分基础上改为判断大小而不仅仅是是否相等
5.搜索目标数字占据的区间
	先find第一个,再find最后一个,ojbk
6.在含有空格的字符串中寻找指定字符
	如果nums[mid] == '',选择一个方向直到遇见第一个非''元素
	*你甚至可以直接用顺序搜索
7.无限序列中寻找某元素第一次出现的位置,即无限长度的数据流*
	双倍找区间,然后转二分
8.房屋供暖问题**
	对每间房屋寻找它在供暖设备序列中的位置,计算最近距离
9.Sqrt()
10.矩阵搜索:
	方法1：逐行二分,并且用判断缩小下一行的循环范围
	方法2：从左下角开始,偏大向上、偏小向右
11.矩阵搜索2:寻找第k小的数**
	每次取当前最大、最小值的一般进行逐行二分插入,根据插入位置缩小范围
12.寻找重复数
	m = n//2,遍历寻找重复数在哪一侧;根据结果更新m,相当于对m进行二分查找,O(nlgn)
	重复数意味着有相同的入口,也就意味着成环,故可以用双指针法
13.两个有序数组的中值**
	初步实现了,但复杂度O(lgn1+lgn2)*O(lg(n1+n2)),还能再改进
14.合并区间、插入区间
	比较简单,不需要二分,先排序再根据端点进行判别
	*先排序,这样就可以通过一次遍历完成操作
	插入区间思路一致,注意保证tar只插入一次
	